# hi
hi
data
X
# ASSIGNMENT 2
# 3.1 Finding the regression coeffecient b_1
q()
getwd()
setwd('/Desktop/math-7260-2023-spring/carData/data'
)
setwd('Users/benstager/Desktop/math-7260-2023-spring/carData/data')
setwd()
setwd('Users/benstager/Desktop/math-7260-2023-spring')
load(file = 'highway1.rda')
highway1
Highway1
load(file = 'Highway1')
Highway1[,'len']
load(file = 'Highway1.rda')
setwd('Users/benstager/Desktop/')
setwd('Users/benstager/Desktop')
Highway1
X = Highway1
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(faraway)
install.packages("faraway")
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
gavote <- gavote %>%
as_tibble(rownames = "county") %>%
print(width = Inf)
---
title: "exercise3"
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
gavote <- gavote %>%
as_tibble(rownames = "county") %>%
# Seeking to store undercount variable (% of ballots that weren't votes)
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
# We also want to scale each amount of votes as vote percentage by county
(gavote <- gavote %>%
rename(usage = rural) %>%
mutate(pergore = gore / votes, perbush = bush / votes)) %>%
# Creating gramian matrix
X =  as.matrix(cbind(1,pergore,perbush))
Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
gavote <- gavote %>%
as_tibble(rownames = "county") %>%
# Seeking to store undercount variable (% of ballots that weren't votes)
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
# We also want to scale each amount of votes as vote percentage by county
(gavote <- gavote %>%
rename(usage = rural) %>%
mutate(pergore = gore / votes, perbush = bush / votes)) %>%
# Creating gramian matrix
X =  as.matrix(cbind(1,pergore,perbush))
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
gavote <- gavote %>%
as_tibble(rownames = "county") %>%
# Seeking to store undercount variable (% of ballots that weren't votes)
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
# We also want to scale each amount of votes as vote percentage by county
(gavote <- gavote %>%
rename(usage = rural) %>%
mutate(pergore = gore / votes, perbush = bush / votes)) %>%
# Creating gramian matrix
(lmod <- lm(undercount ~ pergore + perAA, gavote))
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
undercount = (ballots - votes) / ballots
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
gavote <- gavote %>%
as_tibble(rownames = "county") %>%
# Seeking to store undercount variable (% of ballots that weren't votes)
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
undercount = (ballots - votes) / ballots
gavote['ballots']
undercount = (gavote['ballots'] - gavote['votes']) / gavote['ballots']
undercount
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
gavote <- gavote %>%
as_tibble(rownames = "county") %>%
# Seeking to store undercount variable (% of ballots that weren't votes)
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
undercount = (gavote['ballots'] - gavote['votes']) / gavote['ballots']
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
gavote <- gavote %>%
as_tibble(rownames = "county") %>%
# Seeking to store undercount variable (% of ballots that weren't votes)
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
undercount = (gavote['ballots'] - gavote['votes']) / gavote['ballots']
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
# Seeking to store undercount variable (% of ballots that weren't votes)
gavote <- gavote %>%
mutate(undercount = (ballots - votes) / ballots) %>%
undercount = (gavote['ballots'] - gavote['votes']) / gavote['ballots']
gavote
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
# Seeking to store undercount variable (% of ballots that weren't votes)
undercount = (gavote['ballots'] - gavote['votes']) / gavote['ballots']
# We also want to scale each amount of votes as vote percentage by county
rename(usage = rural) %>%
mutate(pergore = gore / votes, perbush = bush / votes)) %>%
# Loading gavote data
library(tidyverse)
library(faraway)
gavote %>% head(10)
# Rewriting in a tibble
# Seeking to store undercount variable (% of ballots that weren't votes)
undercount = (gavote['ballots'] - gavote['votes']) / gavote['ballots']
# We also want to scale each amount of votes as vote percentage by county
rename(gavotes['usage'] = gavotes['rural')
rename(gavotes['usage'] = gavotes['rural'])
gavotes['usage'] = gavotes['rural']
gavote['usage'] = gavote['rural']
mutate(pergore = gore / votes, perbush = bush / votes))
gavote['usage'] = gavote['rural']
pergore = gavote['gore']/gavote['votes']
perbush = gavote['bush']/gavote['votes']
perbush
lmod
lmod <- lm(undercount ~ pergore + gavote['perAA'], gavote)
gavote['usage'] = gavote['rural']
pergore = gavote['gore']/gavote['votes']
perbush = gavote['bush']/gavote['votes']
perAA = gavote['perAA']
# Creating gramian matrix
lmod <- lm(undercount ~ pergore + gavote['perAA'], gavote)
undercount
lmod <- lm(undercount ~ pergore + perAA, gavote)
---
title: "exercise3"
gavote['usage'] = gavote['rural']
pergore = gavote['gore']/gavote['votes']
perbush = gavote['bush']/gavote['votes']
perAA = gavote['perAA']
lmod <- lm(undercount ~ pergore + perAA, gavote)
undercount
undercount = as.matrix((gavote['ballots'] - gavote['votes']) / gavote['ballots'])
undercount
lmod <- lm(undercount ~ pergore + perAA, gavote)
undercount = as.matrix((gavote['ballots'] - gavote['votes']) / gavote['ballots'])
# We also want to scale each amount of votes as vote percentage by county
gavote['usage'] = gavote['rural']
pergore = as.matrix(gavote['gore']/gavote['votes'])
perbush = as.matrix(gavote['bush']/gavote['votes'])
perAA = as.matrix(gavote['perAA'])
# Creating gramian matrix
lmod <- lm(undercount ~ pergore + perAA, gavote)
lmod
library(tidyverse)
library(faraway)
gavote %>% head(10)
gavote['usage'] = gavote['rural']
pergore = as.matrix(gavote['gore']/gavote['votes'])
perbush = as.matrix(gavote['bush']/gavote['votes'])
perAA = as.matrix(gavote['perAA'])
X = cbind(1,pergore,perAA)
# Linear model
lmod <- lm(undercount ~ pergore + perAA, gavote)
X
# Linear model
lmod <- lm(undercount ~ pergore + perAA, gavote)
predict(lmod) %>% X
knitr::opts_chunk$set(echo = TRUE)
summary(lmod)
cpergore = pergore - mean(pergore)
cperAA = perAA - mean(perAA)
usage = gavote['usage']
lmodi = lm(undercount ~ cperAA + usage*cpergore + equip, gavote)
summary(lmodi)
library(gtsummary)
load.package(gtsummary)
install.packages(gtsummary)
model.matrix(lmodi)
X = model.matrix(lmodi)
Y = undercount
beta_ls = (t(X) %*% X) %*% t(X) %*% Y
beta_ls
X = as.matrix(model.matrix(lmodi))
Y = as.matrix(undercount)
beta_ls
X = as.matrix(model.matrix(lmodi))
Y = as.matrix(undercount)
beta_ls = solve((t(X) %*% X)) %*% t(X) %*% Y
beta_ls
anova(lmod,lmodi)
confint(lmodi)
plot(lmodi)
plot(lmodi)
getwd()
setwd('Desktop/Models/Education model/')
data = load('SLID-Ontario.txt')
data = load(file = 'SLID-Ontario.txt')
data = read.table("SLID-Ontario.txt", header = TRUE)
data
data = as.matrix(data)
data
data = read.table('SLID-Ontario.txt', header = TRUE)
data['age']
data[1,'']
data[2,'']
data[2,]
lmod = lm(compositeHourlyWages ~ age + sex + yearsEducation)
age
lmod = lm(data[compositeHourlyWages] ~ data[age] + data[sex] + data[yearsEducation])
lmod = lm(data['compositeHourlyWages'] ~ data['age'] + data['sex'] + data['yearsEducation'])
lmod = lm(compositeHourlyWages ~ age + sex + yearsEducation, data = data)
summary(lmod)
# Logging wages
lmod.2 = lm()
lmod.2 = lm()
lmod.2 <- lm()
lmod.2 = lm(log2(compositeHourlyWages) ~ age + sex + yearsEducation, data = data)
summary(lmod.2)
